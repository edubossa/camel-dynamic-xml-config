[
  {
    "applicationName" : "onClickQuotation",
    "route" : "<route rest=\"true\">\n        <from uri=\"rest://post:/connector:/quotation?consumes=application%2Fjson&amp;inType=com.fasterxml.jackson.databind.JsonNode&amp;produces=application%2Fjson&amp;routeId=post-quotation\"/>\n        <log message=\"receive request ==> \\n ${body} \"/>\n        <to uri=\"direct:httpMultcastAsync\"/>\n    </route>"
  },
  {
    "applicationName" : "onClickQuotation",
    "route" : "<route id=\"callHttp\">\n        <from uri=\"direct:httpMultcastAsync\" />\n        <multicast stopOnException=\"true\"\n                   stopOnAggregateException=\"true\"\n                   parallelProcessing=\"false\"\n                   strategyRef=\"httpMultiCastAggregationStrategy\"\n                   strategyMethodName=\"aggregate\">\n            <to uri=\"direct:elegibility\"/>\n            <to uri=\"direct:quotation\"/>\n            <to uri=\"direct:triage\"/>\n        </multicast>\n        <setHeader name=\"CamelJsltString\">\n            <constant>\n                {\n                    \"id\" : .request01.request01.enrichedId,\n                    \"process\" : .request01.request01.enrichedProcess\n                }\n            </constant>\n        </setHeader>\n        <to uri=\"jslt:callHttp\" />\n    </route>"
  },
  {
    "applicationName" : "onClickQuotation",
    "route" : "<route id=\"process01\">\n        <from uri=\"direct:elegibility\"/>\n        <setHeader name=\"CamelHttpMethod\">\n            <constant>GET</constant>\n        </setHeader>\n        <to uri=\"http://www.mocky.io/v2/5e62bd803600007100e8dc20?bridgeEndpoint=true&amp;throwExceptionOnFailure=false\" />\n        <choice>\n            <when>\n                <!-- quando o codigo http for menor que 300 -->\n                <simple>${header.CamelHttpResponseCode} &lt; 300</simple>\n                <setHeader name=\"CamelHttpMethod\">\n                    <constant>GET</constant>\n                </setHeader>\n                <to uri=\"http://www.mocky.io/v2/5e50287e3000009000226e4f?bridgeEndpoint=true\"/>\n            </when>\n            <otherwise>\n                <log message=\"nao foi possivel obter response: ${body} \\n redirecionando para outra API...\"/>\n                <setHeader name=\"CamelHttpMethod\">\n                    <constant>GET</constant>\n                </setHeader>\n                <to uri=\"http://www.mocky.io/v2/5e5027ed3000005100226e49?bridgeEndpoint=true\"/>\n            </otherwise>\n        </choice>\n        <setHeader name=\"CamelJsltString\">\n            <constant>\n                {\n                \"enrichedId\" : .id,\n                \"enrichedProcess\" : .process\n                }\n            </constant>\n        </setHeader>\n        <to uri=\"jslt:process01\" />\n    </route>"
  },
  {
    "applicationName" : "onClickQuotation",
    "route" : "<route id=\"process02\">\n        <from uri=\"direct:quotation\"/>\n        <setHeader name=\"CamelHttpMethod\">\n            <constant>GET</constant>\n        </setHeader>\n        <to uri=\"http://www.mocky.io/v2/5e5028643000009000226e4e?bridgeEndpoint=true\" />\n    </route>"
  },
  {
    "applicationName" : "onClickQuotation",
    "route" : "<route id=\"process03\">\n        <from uri=\"direct:triage\"/>\n        <setHeader name=\"CamelHttpMethod\">\n            <constant>GET</constant>\n        </setHeader>\n        <to uri=\"http://www.mocky.io/v2/5e50287e3000009000226e4f?bridgeEndpoint=true\" />\n    </route>"
  },
  {
    "applicationName" : "onClickEffective",
    "route" : ""
  },
  {
    "applicationName" : "onClickEffective",
    "route" : ""
  }
]